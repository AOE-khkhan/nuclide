#!/usr/bin/env python3

# Copyright (c) 2015-present, Facebook, Inc.
# All rights reserved.
#
# This source code is licensed under the license found in the LICENSE file in
# the root directory of this source tree.

import logging
import optparse
import os
import sys
import textwrap

CODE_FOLDER_NAME_MAP = {"js:node": "gen-nodejs", "java": "gen-java", "php": "gen-php"}


def add_header(fpath):
    header = textwrap.dedent(
        """\
        /**
        * Copyright (c) 2017-present, Facebook, Inc.
        * All rights reserved.
        *
        * This source code is licensed under the BSD-style license found in the
        * LICENSE file in the root directory of this source tree. An additional grant
        * of patent rights can be found in the PATENTS file in the same directory.
        *
        * @generated
        */

        """
    )

    with open(fpath, "r") as f:
        content = f.read()

    with open(fpath, "w") as f:
        f.write(header + content)


def add_copyright_headers_to_code_files(folder_path):
    for fname in os.listdir(folder_path):
        fpath = os.path.join(folder_path, fname)
        if os.path.isdir(fpath):
            add_copyright_headers_to_code_files(fpath)
        elif os.path.isfile(fpath):
            add_header(fpath)


def main():
    # Set up the logging early on in the process.
    logging.basicConfig(level=logging.INFO, format="%(message)s")

    # Parse the command-line arguments.
    parser = optparse.OptionParser(
        usage="usage: %prog [options]",
        description="Generate thrift code for remote file system service",
    )

    parser.add_option(
        "-l",
        "--lan",
        action="store",
        dest="language",
        choices=["js:node", "java", "php", "python", "perl", "ruby"],
        default="js:node",
        help="Compile thrift to given language.",
    )

    (options, args) = parser.parse_args()

    # compile thrift file and generate thrift code to target language
    print("\n Generating thrift file into source code ...")
    os.system(f"thrift --gen {options.language} -r filesystem.thrift")

    # make sure we add copyright header and the 'generated' file tags
    folder_name = CODE_FOLDER_NAME_MAP[options.language]
    add_copyright_headers_to_code_files(os.path.join(os.getcwd(), folder_name))


if __name__ == "__main__":
    main()
